{"version":3,"sources":["assets/cog.svg","assets/printing-press.png","assets/soothsaying-ad.svg","components/Header.js","components/Intro.js","components/Form.js","components/Newspaper.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","printingPress","Form","_this","this","action","onSubmit","props","submitForm","htmlFor","type","name","id","placeholder","value","tabIndex","onChange","e","handleChange","onBlur","validateFormField","errors","city","country","month","disabled","min","max","day","year","Object","values","some","error","Newspaper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newspaperTitle","getRandomItem","fact","ad","Footer","href","target","aria-label","rel","validText","text","trim","length","validDay","Number","validMonth","validYear","test","formFieldValidators","App","setState","defineProperty","arr","Math","floor","random","validator","objectSpread","validateForm","preventDefault","resultValidateForm","every","hasError","Promise","all","axios","method","url","dataResponse","params","reqUrl","concat","xmlToJSON","then","_ref","response","slicedToArray","historialFact","data","isLoading","showResult","resetForm","components_Header","Intro","components_Form","components_Newspaper","onClick","components_Footer","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.198317ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.cb9a93cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/printing-press.19c8569d.png\";","module.exports = __webpack_public_path__ + \"static/media/soothsaying-ad.98154d27.svg\";","import React, { Component } from 'react';\nimport logo from './../assets/cog.svg';\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header>\n        <div className=\"container-logo\">\n          <img\n            src={logo}\n            className=\"logo-cog\"\n            alt=\"logo: rotating black cog with spanner cut-out in the middle.\"\n          />\n        </div>\n        <h1>The Absolutely Amazing Newspaper Apparatus!</h1>\n        <div className=\"container-line\">\n          <div />\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header","import React, { Component } from \"react\";\nimport printingPress from \"./../assets/printing-press.png\";\n\nclass Header extends Component {\n\n  render() {\n    return (\n        <div className=\"container-intro-content\">\n          <p className=\"hear-ye black italic\">Hear ye, hear ye!</p>\n          <div>\n            <div className=\"container-txt\">\n              <p>Have you ever dreamt of your very own customised newspaper? Well, good news; the Age of the Machine has made it possible!</p>\n            </div>\n            <div className=\"container-img\">\n              <img src={printingPress} alt=\"illustration of vintage printing press.\"/>\n            </div>\n            <div className=\"container-txt\">\n              <p>Fill in your details and our world-class amazing apparatus will do its’ magic! <span className=\"bold uppercase\">Prepared to be awed and astounded!</span>\n              </p>\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Header","import React, { Component } from 'react';\n\nclass Form extends Component {\n  render() {\n    return (\n      <form action=\"\" onSubmit={this.props.submitForm}>\n        <div className=\"container-name\">\n          <legend>What's your full name?</legend>\n          <div className=\"container-name-fields\">\n            <label htmlFor=\"user-name\" className=\"visually-hidden\">Full name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              placeholder=\"Full name\"\n              value={this.props.name}\n              tabIndex=\"1\"\n              onChange={e => {\n                this.props.handleChange(e);\n              }}\n              onBlur={this.props.validateFormField}\n            />\n            {this.props.errors.name && (\n              <div className=\"container-error\">\n                <p>Great zoots! The apparatus needs your name to start!</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"container-birthplace\">\n          <legend>Where were you born?</legend>\n          <div className=\"container-birthplace-fields\">\n            <div className=\"inputText\">\n              <label htmlFor=\"city\" className=\"visually-hidden\">City</label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                id=\"city\"\n                placeholder=\"City\"\n                value={this.props.city}\n                tabIndex=\"1\"\n                onChange={e => {\n                  this.props.handleChange(e);\n                }}\n                onBlur={this.props.validateFormField}\n              />\n              {this.props.errors.city && (\n                <div className=\"container-error\">\n                  <p>Zounds! Please tell the apparatus your city of birth!</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"inputText\">\n              <label htmlFor=\"country\" className=\"visually-hidden\">Country</label>\n              <input\n                type=\"text\"\n                name=\"country\"\n                id=\"country\"\n                placeholder=\"Country\"\n                value={this.props.country}\n                tabIndex=\"1\"\n                onChange={e => {\n                  this.props.handleChange(e);\n                }}\n                onBlur={this.props.validateFormField}\n              />\n              {this.props.errors.country && (\n                <div className=\"container-error\">\n                  <p>Uh-oh.. The apparatus needs your country of birth to operate!</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container-DOB\">\n          <legend>When's your birthday?</legend>\n          <div className=\"container-DOB-fields\">\n            <div className=\"selectMonth\">\n              <label htmlFor=\"month\" className=\"visually-hidden\">Month</label>\n              <select\n                id=\"month\"\n                name=\"month\"\n                placeholder=\"month\"\n                value={this.props.month}\n                tabIndex=\"1\"\n                onChange={e => {\n                  this.props.handleChange(e);\n                }}\n                onBlur={this.props.validateFormField}\n              >\n                <option value=\"\" disabled>Month</option>\n                <option value=\"1\">January</option>\n                <option value=\"2\">February</option>\n                <option value=\"3\">March</option>\n                <option value=\"4\">April</option>\n                <option value=\"5\">May</option>\n                <option value=\"6\">June</option>\n                <option value=\"7\">July</option>\n                <option value=\"8\">August</option>\n                <option value=\"9\">September</option>\n                <option value=\"10\">October</option>\n                <option value=\"11\">November</option>\n                <option value=\"12\">December</option>\n              </select>\n              {this.props.errors.month && (\n                <div className=\"container-error\">\n                  <p>Zounds! Your birth month is required to continue!</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"inputNum\">\n              <label htmlFor=\"day\" className=\"visually-hidden\">Day</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"31\"\n                id=\"day\"\n                name=\"day\"\n                placeholder=\"Day\"\n                value={this.props.day}\n                tabIndex=\"1\"\n                onChange={e => {\n                  this.props.handleChange(e);\n                }}\n                onBlur={this.props.validateFormField}\n              />\n              {this.props.errors.day && (\n                <div className=\"container-error\">\n                  <p>Kindly input your birth day to operate the apparatus!</p>\n                </div>\n              )}\n            </div>\n\n            <div className=\"inputNum\">\n              <label htmlFor=\"year\" className=\"visually-hidden\">Year</label>\n              <input\n                type=\"number\"\n                id=\"year\"\n                name=\"year\"\n                placeholder=\"Year\"\n                value={this.props.year}\n                tabIndex=\"1\"\n                onChange={this.props.handleChange}\n                onBlur={this.props.validateFormField}\n              />\n              {this.props.errors.year && (\n                <div className=\"container-error\">\n                  <p>Uh-oh! Please input your birth year to run the apparatus!</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <input type=\"submit\" value=\"Get my Newspaper\" tabIndex=\"1\" />\n        {Object.values(this.props.errors).some(error => error) && (\n          <div className=\"container-error\">\n            <p>Zounds! The apparatus requires your missing inputs to run!</p>\n          </div>\n        )}\n      </form>\n    );\n  }\n}\n\nexport default Form","import React, {Component} from \"react\";\nimport ad from \"./../assets/soothsaying-ad.svg\";\n\nclass Newspaper extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newspaperTitle: [\"Times\", \"Tribute\", \"Star\", \"Daily\", \"Post\", \"Tribune\", \"Mirror\", \"News\", \"Journal\", \"Press\", \"Chronicle\", \"Courier\", \"Reporter\", \"Herald\", \"Bulletin\"],\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-newspaper\">\n        <h2><span>The</span> {this.props.city} {this.props.getRandomItem(this.state.newspaperTitle)}</h2>\n        <h3 className=\"uppercase\">{this.props.country}’s no.1 Newspaper</h3>\n        <div className=\"title-info-line\">\n          <p>{this.props.day}.{this.props.month}.{this.props.year}</p>\n        </div>\n        <div className=\"container-newspaper-content\">\n          <div className=\"container-txt\">\n            <h4>Same Day, Another Year</h4>\n            <p>{this.props.fact}</p>\n          </div>\n          <div className=\"container-img\">\n            <img src={ad} alt=\"vintage fortune telling ad.\" />\n          </div>\n          <div className=\"container-txt\">\n            <h4>World’s Cutest Baby Born!</h4>\n            <p>Doctors are astounded by the birth of {this.props.name}. <span className=\"italic\">\"Cutest baby I’ve ever seen in my life!\"</span> gushes a besotted nurse. Parents are doing well.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Newspaper","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <div className=\"wrapper\">\n          <p>\n            Designed & hand-coded with ♥ by <a href=\"http://www.anniebombanie.com\" target=\"_blank\" aria-label=\"go to Annie Liew's website.\" rel=\"noopener noreferrer\">Annie Liew</a> | Powered by the <a href=\"http://numbersapi.com\" target=\"_blank\" aria-label=\"go to numbers api's website.\" rel=\"noopener noreferrer\">Numbers API</a>\n          </p>\n        </div>\n      </footer>\n    );}\n}\n\nexport default Footer\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header.js\";\nimport Intro from \"./components/Intro.js\";\nimport Form from \"./components/Form.js\";\nimport Newspaper from \"./components/Newspaper.js\";\nimport Footer from \"./components/Footer.js\";\nimport \"./styles/App.css\";\n\n\n//SET OF VALIDATOR FUNCTIONS TO RETURN BOOLEAN (TRUE)\nconst validText = text => {\n  //make sure user doesn't type empty spaces\n  return !!text.trim().length;\n}\nconst validDay = day => {\n  //must input a number between 1-31\n  if (typeof(Number(day)) === \"number\" && day >= 1 && day  <= 31) {\n    return true;\n  };\n};\nconst validMonth = month => {\n  //if month is selected, return true\n  return month;\n};\nconst validYear = year => {\n  //if userInput doesn't match regex (4 digit number), return false\n  const workingYear = /^\\d{4}$/.test(year);\n  return workingYear;\n};\n\n//Map form fields to validator functions\nconst formFieldValidators = {\n  name: validText,\n  day: validDay,\n  month: validMonth,\n  year: validYear,\n  city: validText,\n  country: validText,\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // group field values\n      // values: {\n      //   name: \"\",\n      //   day: \"\",\n      //   month: \"\",\n      //   year: \"\",\n      //   city: \"\",\n      //   country: \"\",\n      // },\n      name: \"\",\n      day: \"\",\n      month: \"\",\n      year: \"\",\n      city: \"\",\n      country: \"\",\n      historialFact: \"\",\n      isLoading: true,\n      showResult: false,\n      errors: {},\n    };\n  }\n\n  handleChange = e => {\n    //target name of element so we know which one is being changed and grab its value\n    this.setState({\n      [e.target.name]: e.target.value,\n      // values: {\n      //   // SPREAD or it will over ride alllllll values.\n      //   ...this.state.values,\n      //   [e.target.name]: e.target.value,\n      // }\n    });\n  };\n\n  getRandomItem = arr => {\n    //get the value of a random index\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    const randomItem = arr[randomIndex];\n    return randomItem;\n  };\n\n  validateFormField = e => {\n    //get validator function from key-value object (MAP) (store as variable)\n    const validator = formFieldValidators[e.target.name];\n\n    //after field is updated, validate it and see if it returns false\n    // if (!validator(e.target.value)) {\n    //   //if false, set error form field to true\n    //   this.setState({\n    //     errors: {\n    //       ...this.state.errors,\n    //       //if it's value, set to false, if valid, set to true.\n    //       [e.target.name]: true,\n    //     },\n    //   });\n    // }\n\n    //React makes synthnic events so after function ends, not garenteed to have access to target anymore. (might have changed) In function so async, we want to make sure we have access to the values at time of invocation. When original function is called.\n    const value= e.target.value;\n    const name= e.target.name;\n\n     //if using state in setState, then it should be function because you're getting the most recent state at the time it's called because setState is sync and it's not called right away. BEST PRACTICE [So that state doesn't change in between - think radio buttons]\n    this.setState((state) => ({\n      errors: {\n        ...state.errors,\n        //if it's valid, set to false (don't show error), if not valid, set to true (opposite) BECAUSE to show an error\n        [name]: !validator(value),\n      }\n    }));\n  };\n\n  // validateForm = state => {\n  //   // return errors (boolean for fields) object for whole form\n  //   return {\n  //     name: !validText(state.name),\n  //     day: !validDay(state.day),\n  //     month: !validMonth(state.month),\n  //     year: !validYear(state.year),\n  //     city: !validText(state.city),\n  //     country: !validText(state.country),\n  //   };\n  // };\n\n  // submitForm = e => {\n  //   //prevent default behaviour of submit button\n  //   e.preventDefault();\n\n  //   const resultValidateForm = this.validateForm(this.state);\n  //   this.setState( {\n  //     //set state.errors to reflect results of validation\n  //     errors: resultValidateForm,\n  //   });\n\n\n  validateForm = () => {\n    // return errors (boolean for fields) object for whole form (MIGHT NOT ACTUALLY NEED IT IF ONBLUR IS WORKING & FASTER) - ur duplicating stuff- if change up there, must add here. MAKING SURE ALL is up to date (resultValidateForm)\n\n    //alternatively_ BETTER WAY: have the form validate onChange and have the errors show onBlur. What this means is that errors can disappear as soon as valid instead of when user goes out of field\n    return {\n      name: !validText(this.state.name),\n      day: !validDay(this.state.day),\n      month: !validMonth(this.state.month),\n      year: !validYear(this.state.year),\n      city: !validText(this.state.city),\n      country: !validText(this.state.country),\n    };\n  };\n\n  submitForm = e => {\n    //prevent default behaviour of submit button\n    e.preventDefault();\n\n    const resultValidateForm = this.validateForm();\n    this.setState( {\n      //set state.errors to reflect results of validation\n      errors: resultValidateForm,\n    });\n\n    //now we have an object with all fields, so checking if no errors. It's going to be TRUE unless one this is invalid\n    // let valid = true;\n\n    // Object.keys(resultValidateForm).forEach(error => {\n    //   if (resultValidateForm[error] === true) {\n    //     valid = false;\n    //   }\n    // });\n\n    //have array of booleans and making sure all is false (every is a method that takes a function that returns a boolean). hasError = result of value of each field. If there is an error, we WANT valid = false. Above version without .every or .some will go through EVERY SINGLE THING so it's performance expensive/ .every & .some stops as soon as hits one\n    const valid = Object.values(resultValidateForm).every(hasError => (!hasError));\n\n    if (valid) {\n      // call API and dynamically insert month/name values from state\n     //will wait for everything u put in the [] which are all your different API\n      Promise.all([\n        axios({\n          //use Proxy server to get past CORS\n          method: \"GET\",\n          url: \"https://proxy.hackeryou.com\",\n          dataResponse: \"json\",\n          params: {\n            reqUrl: `http://numbersapi.com/${this.state.month}/${this.state.day}/date`,\n            xmlToJSON: false,\n            },\n          }),\n          // axios({})\n      ]).then(([response]) => { //array destructuring (responses) {something like api1response & so on forth}\n          this.setState({\n            historialFact: response.data, //responses[0].data\n            isLoading: false,\n          });\n        });\n\n      // axios({\n      // //use Proxy server to get past CORS\n      // method: \"GET\",\n      // url: \"https://proxy.hackeryou.com\",\n      // dataResponse: \"json\",\n      // params: {\n      //   reqUrl: `http://numbersapi.com/${this.state.month}/${this.state.day}/date`,\n      //   xmlToJSON: false,\n      //   },\n      // }).then(response => {\n      //   this.setState({\n      //     historialFact: response.data,\n      //     isLoading: false,\n      //   });\n      // });\n\n      //change states for conditional rendering to display result\n      this.setState({\n        // showForm: false,\n        showResult: true,\n      });\n    }\n  };\n\n  resetForm = () => {\n    // const values = {};\n    // Object.keys(this.state.values).forEach(key => {values[key] = \"\")\n    // this.setState ({values})\n\n    //reset all values\n    this.setState({\n      // values: values,\n      name: \"\",\n      day: \"\",\n      month: \"\",\n      year: \"\",\n      city: \"\",\n      country: \"\",\n      historialFact: \"\",\n      isLoading: true,\n      showResult: false,\n    });\n  };\n\n  validYear = year => {\n    //if userInput doesn't match regex (4 digit number), return false\n    const workingYear = /^\\d{4}$/.test(year);\n    return workingYear;\n\n    // return /^\\d{4}$/.test(year);\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"vignette\" />\n        <Header />\n        <div className=\"container-main\">\n          <Intro />\n          {/* Avoid name collisions <Form>\n            <Field validate={validDay}></Field>\n          </Form> */}\n          <Form\n            //  if changed to object, pass as one object\n            // values={this.state.values}\n            name={this.state.name}\n            day={this.state.day}\n            month={this.state.month}\n            year={this.state.year}\n            city={this.state.city}\n            country={this.state.country}\n\n            errors={this.state.errors}\n\n            handleChange={this.handleChange}\n            validateFormField={this.validateFormField}\n            submitForm={this.submitForm}\n          />\n          \n        </div>\n\n        {this.state.showResult && (\n          <div className=\"result\">\n            {this.state.isLoading ? (\n              <p>Generating your custom newspaper...</p>\n            ) : (\n              <div>\n                <Newspaper\n                  name={this.state.name}\n                  city={this.state.city}\n                  day={this.state.day}\n                  month={this.state.month}\n                  year={this.state.year}\n                  fact={this.state.historialFact}\n                  country={this.state.country}\n                  getRandomItem={this.getRandomItem}\n                  newspaperTitle={this.state.newspaperTitle}\n                />\n                <button type=\"reset\" onClick={this.resetForm} tabIndex=\"1\">\n                  Get Another Newspaper\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/App.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport WebFont from \"webfontloader\";\nWebFont.load({\n  google: {\n    families: [\n      \"Rye\", \"cursive\",\n      \"Vollkorn:400,400i,700,700i,900,900i\", \"serif\",\n      \"Abril Fatface\", \"cursive\",\n      \"UnifrakturCook:700\", \"cursive\",\n    ],\n  },\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}