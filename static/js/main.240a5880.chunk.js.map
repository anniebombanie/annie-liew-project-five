{"version":3,"sources":["assets/cog.svg","assets/printing-press.png","assets/soothsaying-ad.svg","components/Header.js","components/Form.js","components/Newspaper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","printingPress","Component","Form","_this","this","action","onSubmit","props","submitForm","htmlFor","type","name","id","placeholder","value","onChange","e","handleChange","errors","city","country","month","min","max","day","year","Object","values","some","err","Newspaper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newspaperTitle","getRandomItem","fact","ad","validText","text","trim","length","validDay","Number","validMonth","validYear","test","formValidators","App","targetName","target","targetVal","validator","console","log","setState","defineProperty","objectSpread","validateForm","preventDefault","resultValidateForm","valid","keys","forEach","error","axios","url","concat","method","then","response","historialFact","data","isLoading","showResult","arr","Math","floor","random","resetForm","components_Header","components_Form","components_Newspaper","onClick","Boolean","window","location","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.240a5880.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.cb9a93cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/printing-press.19c8569d.png\";","module.exports = __webpack_public_path__ + \"static/media/soothsaying-ad.98154d27.svg\";","import React, { Component } from 'react';\nimport logo from './../assets/cog.svg';\nimport printingPress from './../assets/printing-press.png';\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header>\n        <div className='container-logo'>\n          <img src={logo} className='logo-cog' alt='logo: rotating black cog with spanner cut-out in the middle.' />\n        </div>\n        <h1>The Absolutely Amazing Newspaper Apparatus!</h1>\n        <div className='container-line'>\n          <div></div>\n        </div>\n        <p className='black italic'>Hear ye, hear ye!</p>\n        <p>Have you ever dreamt of your very own customised newspaper? Well, good news; the Age of the Machine has made it possible!</p>\n        <img src={printingPress} alt='illustration of vintage printing press.' />\n        <p>Fill in your details and our world's first amazing apparatus will do its magic! <span className='bold uppercase'>Prepared to be awed and astounded!</span></p>\n      </header>\n    );\n  }\n}\n\nexport default Header","import React, { Component } from 'react';\n\nclass Form extends Component {\n\n  render() {\n    return (\n      <form\n        action=\"\"\n        onSubmit={this.props.submitForm}\n      >\n        <label htmlFor=\"user-name\">What's your full name?</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Enter your full name here\"\n          value={this.props.name}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        />\n        {this.props.errors.name && <p className=\"error\">Please enter your name!</p>}\n\n        <legend>Where were you born?</legend>\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          name=\"city\"\n          id=\"city\"\n          placeholder=\"Enter your City here\"\n          value={this.props.city}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        />\n        {this.props.errors.city && <p className=\"error\">Please input your city!</p>}\n\n        <label htmlFor=\"country\">Country</label>\n        <input\n          type=\"text\"\n          name=\"country\"\n          id=\"country\"\n          placeholder=\"Enter your Country here\"\n          value={this.props.country}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        />\n        {this.props.errors.country && <p className=\"error\">Please input your country!</p>}\n\n        <legend>When's your birthday?</legend>\n        <label htmlFor=\"month\">Month</label>\n        <select\n          id=\"month\"\n          name=\"month\"\n          placeholder=\"month\"\n          value={this.props.month}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        >\n          <option value=\"\">Month</option>\n          <option value=\"1\">January</option>\n          <option value=\"2\">February</option>\n          <option value=\"3\">March</option>\n          <option value=\"4\">April</option>\n          <option value=\"5\">May</option>\n          <option value=\"6\">June</option>\n          <option value=\"7\">July</option>\n          <option value=\"8\">August</option>\n          <option value=\"9\">September</option>\n          <option value=\"10\">October</option>\n          <option value=\"11\">November</option>\n          <option value=\"12\">December</option>\n        </select>\n        {this.props.errors.month && <p className=\"error\">Please choose a month!</p>}\n\n        <label htmlFor=\"day\">Day</label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          max=\"31\"\n          id=\"day\"\n          name=\"day\"\n          placeholder=\"Day\"\n          value={this.props.day}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        />\n        {this.props.errors.day && <p className=\"error\">Please enter a day!</p>}\n\n        <label htmlFor=\"year\">Year</label>\n        <input\n          type=\"number\"\n          id=\"year\"\n          name=\"year\"\n          placeholder=\"Year\"\n          value={this.props.year}\n          onChange={e => {\n            this.props.handleChange(e);\n          }}\n        />\n        {this.props.errors.year && <p className=\"error\">Please enter your year!</p>}\n\n        <input type=\"submit\" value=\"Get my Newspaper\" />\n\n        {Object.values(this.props.errors).some(err => err) \n          && <p className=\"error\">Please fill in the missing fields!</p>}\n      </form>\n    );\n  }\n}\n\nexport default Form","import React, {Component} from 'react';\nimport ad from './../assets/soothsaying-ad.svg';\n\nclass Newspaper extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newspaperTitle: ['Times', 'Tribute', 'Star', 'Daily', 'Post', 'Tribune', 'Mirror', 'News', 'Journal', 'Press', 'Chronicle', 'Courier', 'Reporter', 'Herald', 'Bulletin'],\n    }\n  }\n\n  render() {\n    return (\n      <div className='newspaper'>\n        <h2><span>The</span> {this.props.city} {this.props.getRandomItem(this.state.newspaperTitle)}</h2>\n        <h3 className=\"uppercase\">{this.props.country}'s no.1 Newspaper</h3>\n        <div className='title-info-line'>\n          <p>{this.props.day}.{this.props.month}.{this.props.year}</p>\n        </div>\n        <div className='historical-fact'>\n          <h4>Same Day, Another Year</h4>\n          <p>{this.props.fact}</p>\n        </div>\n        <img src={ad} alt='vintage fortune telling ad.' />\n        <div className='baby'>\n          <h4>World's Cutest Baby Born!</h4>\n          <p>Doctor's are astounded by the birth of {this.props.name}.<span className=\"italic\">\"Cutest baby I've ever seen in my life!\"</span> gushes a besotted nurse. Parents are doing well.</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Newspaper","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Header from './components/Header.js'\nimport Form from './components/Form.js'\nimport Newspaper from './components/Newspaper.js';\nimport './styles/App.css';\n\n\n// Set of validator functions to return boolean\nconst validText = text => {\n  return !!text.trim().length;\n}\n\nconst validDay = day => {\n  if (typeof(Number(day)) === \"number\" && day >= 1 && day  <= 31) {\n    return true;\n  };\n};\n\nconst validMonth = month => {\n  return month;\n};\n\nconst validYear = year => {\n  //if userInout doesn't match regex, return false\n  const workingYear = /^\\d{4}$/.test(year);\n  return workingYear;\n};\n\n//mapping form fields to validator functions\nconst formValidators = {\n  name: validText,\n  day: validDay,\n  month: validMonth,\n  year: validYear,\n  city: validText,\n  country: validText,\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      day: \"\",\n      month: \"\",\n      year: \"\",\n      city: \"\",\n      country: \"\",\n      historialFact: \"\",\n      isLoading: true,\n      showResult: false,\n      errors: {}\n    };\n  }\n\n  handleChange = (e) => {\n    //store values as variables to use later (so it's cleaner)\n    //target name of element so we know which one is being changed and then grab its value at the same time\n    const targetName = e.target.name;\n    const targetVal = e.target.value;\n\n    //Getting validator function from map \n    const validator = formValidators[targetName];\n    console.log('VALIDATING')\n    this.setState({\n      [targetName]: targetVal,\n    });\n\n    //after update field, validate the field and see if return false\n    if (!validator(targetVal)) {\n      //if false, set error form field to true\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          [targetName]: true,\n        }\n      });\n    }   \n  };\n\n  validateForm = (state) => {\n    // get the value of each input\n    // check if these values are what you want\n    // if they ALL are, this.submitForm();\n    // otherwise, showIndividualError()\n\n    // return errors object for whole form\n    return {\n      name: !validText(state.name),\n      day: !validDay(state.day),\n      month: !validMonth(state.month),\n      year: !validYear(state.year),\n      city: !validText(state.city),\n      country: !validText(state.country),\n    };\n  };\n  \n\n  submitForm = e => {\n    //prevent default behaviour of submit button\n    e.preventDefault();\n\n    const resultValidateForm = this.validateForm(this.state);\n    console.log(resultValidateForm);\n    this.setState({\n      // set state.errors to reflect results of validation\n      errors: resultValidateForm\n    });\n\n    // this.errors.every(resultValidateForm === false) && \n\n    let valid = true\n\n    Object.keys(resultValidateForm).forEach(error => {\n      console.log(error);\n      if (resultValidateForm[error] === true) {\n        valid = false;\n      }\n\n    });\n\n    if (valid) {\n\n      //call API and dynamically insert month/name values from state\n      axios({\n        url: `http://numbersapi.com/${this.state.month}/${this.state.day}/date`,\n        method: \"GET\"\n      }).then(response => {\n        this.setState({\n          historialFact: response.data,\n          isLoading: false\n        });\n      });\n\n      //change states for conditional rendering to display result\n      this.setState({\n        // showForm: false,\n        showResult: true\n      }); \n\n    }\n    \n  };\n\n  getRandomItem = arr => {\n    //get the value of a random index\n    const randomIndex = Math.floor(Math.random() * arr.length);\n    const randomItem = arr[randomIndex];\n    return randomItem;\n  };\n\n  resetForm = () => {\n    //reset all values\n    this.setState({\n      name: \"\",\n      day: \"\",\n      month: \"\",\n      city: \"\",\n      country: \"\",\n      historialFact: \"\",\n      isLoading: true,\n      showResult: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"vignette\"></div>\n        <Header />\n        <Form\n          errors={this.state.errors}\n          name={this.state.name}\n          day={this.state.day}\n          month={this.state.month}\n          year={this.state.year}\n          city={this.state.city}\n          country={this.state.country}\n          handleChange={this.handleChange}\n          submitForm={this.submitForm}\n          resetForm={this.resetForm}\n        />\n\n        {this.state.showResult && (\n          <div>\n            {this.state.isLoading ? (\n              <p>Generating your custom newspaper...</p>\n            ) : (\n              <div>\n                <Newspaper\n                  name={this.state.name}\n                  city={this.state.city}\n                  day={this.state.day}\n                  month={this.state.month}\n                  year={this.state.year}\n                  fact={this.state.historialFact}\n                  country={this.state.country}\n                  getRandomItem={this.getRandomItem}\n                  newspaperTitle={this.state.newspaperTitle}\n                />\n                <button type=\"reset\" onClick={this.resetForm}>\n                  Another Newspaper\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\nWebFont.load({\n  google: {\n    families: [\n      'Rye',\n      'cursive',\n      'Vollkorn:400, 400i, 700, 700i, 900, 900i',\n      'serif',\n      'Abril Fatface',\n      'cursive',\n      'UnifrakturCook',\n      'cursive',\n    ],\n  },\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}